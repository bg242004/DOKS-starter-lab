---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ambassador-stack
  namespace: flux-system
spec:
  chart:
    spec:
      chart: ambassador
      sourceRef:
        kind: HelmRepository
        name: ambassador
      version: 6.7.13
  install:
    createNamespace: true
  interval: 1m0s
  targetNamespace: ambassador
  values:
    adminService:
      annotations: {}
      create: true
      port: 8877
      snapshotPort: 8005
      type: ClusterIP
    affinity: {}
    agent:
      cloudConnectToken: ""
      createArgoRBAC: true
      enabled: true
      image:
        repository: null
        tag: null
      rpcAddress: https://app.getambassador.io/
    ambassadorConfig: ""
    authService:
      create: true
      deploymentExtraName: auth
      optional_configurations: {}
    autoscaling:
      enabled: false
      maxReplicas: 5
      metrics:
      - resource:
          name: cpu
          target:
            averageUtilization: 60
            type: Utilization
        type: Resource
      - resource:
          name: memory
          target:
            averageUtilization: 60
            type: Utilization
        type: Resource
      minReplicas: 2
    crds:
      create: true
      enabled: true
      keep: true
    createDevPortalMappings: true
    createNamespace: false
    daemonSet: false
    deploymentAnnotations: {}
    deploymentLabels: {}
    deploymentStrategy:
      type: RollingUpdate
    deploymentTool: ""
    devportal:
      docsPrefix: /documentation/
    dnsPolicy: ClusterFirst
    docker: {}
    enableAES: true
    enableTestService: false
    env: {}
    envRaw: {}
    fullnameOverride: ""
    hostNetwork: false
    image:
      aesRepository: docker.io/datawire/aes
      aesTag: 1.13.10
      ossRepository: docker.io/datawire/ambassador
      ossTag: 1.13.10
      pullPolicy: IfNotPresent
    imagePullSecrets: []
    initContainers: []
    licenseKey:
      annotations: {}
      createSecret: true
      secretName: null
      value: null
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 30
      periodSeconds: 3
    metrics:
      serviceMonitor:
        enabled: false
    module: {}
    nameOverride: ""
    namespaceOverride: ""
    nodeSelector: {}
    podAnnotations: {}
    podDisruptionBudget: {}
    podLabels: {}
    priorityClassName: ""
    prometheusExporter:
      enabled: false
      pullPolicy: IfNotPresent
      repository: prom/statsd-exporter
      resources: {}
      tag: v0.8.1
    rateLimit:
      create: true
      deploymentExtraName: ratelimit
    rbac:
      create: true
      nameOverride: null
      podSecurityPolicies: []
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 30
      periodSeconds: 3
    redis:
      affinity: {}
      annotations:
        deployment: {}
        service: {}
      create: true
      image:
        pullPolicy: IfNotPresent
        repository: redis
        tag: 5.0.1
      nodeSelector: {}
      resources: {}
      tolerations: {}
    redisURL: null
    registry:
      create: false
    replicaCount: 2
    resolvers:
      consul:
        create: false
        name: consul-dc1
        spec: {}
      endpoint:
        create: false
        name: endpoint
    resources:
      limits:
        cpu: 1000m
        memory: 600Mi
      requests:
        cpu: 200m
        memory: 200Mi
    restartPolicy: null
    scope:
      singleNamespace: false
    security:
      containerSecurityContext:
        allowPrivilegeEscalation: false
      podSecurityContext:
        runAsUser: 8888
      podSecurityPolicy: {}
    service:
      annotations: {}
      externalIPs: []
      externalTrafficPolicy: null
      nameOverride: null
      ports:
      - name: http
        port: 80
        targetPort: 8080
      - name: https
        port: 443
        targetPort: 8443
      sessionAffinity: null
      sessionAffinityConfig: null
      type: LoadBalancer
    serviceAccount:
      create: true
      name: null
    servicePreview:
      enabled: false
      trafficAgent:
        image:
          repository: null
          tag: null
        injector:
          crtPEM: ""
          enabled: true
          keyPEM: ""
        port: 9900
        serviceAccountName: traffic-agent
        singleNamespace: true
      trafficManager:
        image:
          repository: null
          tag: null
        serviceAccountName: traffic-manager
    sidecarContainers: []
    terminationGracePeriodSeconds: null
    test:
      enabled: true
      image: busybox
    tolerations: []
    topologySpreadConstraints: []
    volumeMounts: []
    volumes: []

